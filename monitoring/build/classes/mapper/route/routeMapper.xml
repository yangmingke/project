<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 路由表信息管理 -->
<mapper namespace="route">
	 
	 <!-- 获取下一跳路由 -->
	 <select id="getNextHop" parameterType="com.network.monitor.entity.RouteVO" resultType="com.network.monitor.entity.RouteVO">
	 	SELECT
	 		r.sr_id,
	 		r.dest,
	 		r.next_hop
	 	FROM network_monitor.route r
	 	WHERE r.sr_id = #{sr_id}
	 	AND r.dest = #{dest}
	 </select>
	 
	 <!-- 删除路由信息 -->
	 <select id="deleteRoutes">
	 	DELETE FROM network_monitor.route
		WHERE sr_id = #{sr_id} and  inet_ntoa(dest)=#{dest}
	 </select>
	 
	 <delete id="deleteAllRoutes">
	 DELETE FROM network_monitor.route
		WHERE sr_id = #{sr_id}
	 
	 </delete>
	<!-- 批量插入路由表信息 -->
	 <insert id="insertbatch" parameterType="java.util.List">
		INSERT INTO network_monitor.route
			(sr_id, dest, mask, next_hop, iface, metric, time)
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
		  	( #{item.sr_id}, inet_aton(#{item.dest}), inet_aton(#{item.mask}), inet_aton(#{item.next_hop}),#{item.iface}, #{item.metric},unix_timestamp(NOW()))
		</foreach>
	 </insert>
	 
	<!-- 根据目的网络地址查找路由信息-->
	<select id="getRoutes" resultType="map" >
		SELECT
			r.id,
			r.sr_id,
			CONVERT(CONCAT(inet_ntoa(r.dest),''),CHAR) AS dest,
			CONVERT(CONCAT(inet_ntoa(r.mask),''),CHAR) AS mask,
			CONVERT(CONCAT(inet_ntoa(r.next_hop),''),CHAR) AS next_hop,
			r.iface,
			r.metric,
			date_format(
				from_unixtime(r.time),
				'%Y-%m-%d %H:%i:%S'
			) AS time
		FROM network_monitor.route r
		WHERE r.sr_id = #{sr_id} and CONVERT(CONCAT(inet_ntoa(r.next_hop),''),CHAR)=#{next_hop}
		and CONVERT(CONCAT(inet_ntoa(r.dest),''),CHAR)=#{dest}
	</select>
	
</mapper> 