<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SR节点间吞吐量管理 -->
<mapper namespace="throughputStatistics">

	<!-- 批量插入SR节点间吞吐量数据 -->
	<insert id="insertbatch" parameterType="map">
		INSERT INTO network_monitor.node_throughput_statistics_${opDate}
		(src_sr_id, if_name, in_pkts, in_bytes, out_pkts, out_bytes, timespan,
		time)
		VALUES
		<foreach collection="list" item="item" index="index"
			separator=",">
			( #{item.src_sr_id}, #{item.ifname},
			#{item.in_pkts},#{item.in_bytes}
			,#{item.out_pkts},#{item.out_bytes},#{item.timespan},unix_timestamp(NOW()))
		</foreach>
	</insert>
	<!-- 批量插入临时表 -->
	<insert id="insertbatchtmp" parameterType="map">
		INSERT INTO network_monitor.node_throughput_statistics_temp
		(src_sr_id, if_name, in_pkts, in_bytes, out_pkts, out_bytes, timespan,
		time)
		VALUES
		<foreach collection="list" item="item" index="index"
			separator=",">
			( #{item.src_sr_id}, #{item.ifname},
			#{item.in_pkts},#{item.in_bytes}
			,#{item.out_pkts},#{item.out_bytes},#{item.timespan},unix_timestamp(NOW()))
		</foreach>
	</insert>

	<!-- SR节点间吞吐量 -->
	<select id="throughputRate" resultType="map">
		SELECT
		FORMAT((SUM(t.in_pkts) / SUM(a.total) * 100),2) AS in_pkts,
		FORMAT((SUM(t.in_bytes) / SUM(a.total) * 100),2) AS in_bytes,
		FORMAT((SUM(t.out_pkts) / SUM(a.total) * 100),2) AS out_pkts,
		FORMAT((SUM(t.out_bytes) / SUM(a.total) * 100),2) AS out_bytes
		FROM
		network_monitor.node_throughput_statistics_${opDate} t,
		(SELECT
		id,(in_pkts+in_bytes+out_pkts+out_bytes) AS total FROM
		network_monitor.node_throughput_statistics_${opDate}) a,
		network_monitor.sr_node_info b
		WHERE t.id = a.id
		AND t.dst_sr_id =
		b.sr_id
		AND t.src_sr_id = #{src_sr_id}
		<if test="dst_sr_id != null">
			AND t.dst_sr_id = #{dst_sr_id}
		</if>
		<if test="mnos != null">
			AND b.mnos = #{mnos}
		</if>
		<if test="(start_time != null and end_time != null)">
			AND t.time BETWEEN #{start_time} AND #{end_time}
		</if>
	</select>

	<select id="queryThrough" resultType="map">
		SELECT
		truncate((t.in_bytes+t.out_bytes)/t.timespan,0) AS y,
		t.time*1000 AS x
		FROM
		network_monitor.node_throughput_statistics_${opDate} t
		WHERE 1=1
		AND
		t.src_sr_id = #{sr_id}
		AND t.if_name = #{ifname}
		<if test="(start_time != null and end_time != null)">
			AND t.time BETWEEN unix_timestamp(#{start_time}) AND
			unix_timestamp(#{end_time})
		</if>
		ORDER BY
		t.time ASC
	</select>

	<!-- 拓扑结构图SR节点获取总的吞吐量 -->
	<select id="getTotalThrough" resultType="map">
		SELECT
		truncate((SUM(t.in_bytes)+SUM(t.out_bytes))/t.timespan,0) AS
		throughput
		FROM
		node_throughput_statistics_${opDate} t
		WHERE t.src_sr_id
		= #{src_sr_id}
		AND t.time BETWEEN (NOW()-INTERVAL 5
		SECOND) AND NOW()
		GROUP BY t.src_sr_id
	</select>

	<!-- SR流量图 -->
	<select id="drawThroughput" resultType="map">
		SELECT
		truncate(t.in_bytes/t.timespan,0) AS in_bytes,
		truncate(t.out_bytes/t.timespan,0) AS out_bytes
		FROM
		<!-- network_monitor.node_throughput_statistics_${opDate} t -->
		network_monitor.node_throughput_statistics_temp t
		WHERE t.src_sr_id =
		#{sr_id}
		AND t.if_name = #{ifname}
		<if test="(start_time != null and end_time != null)">
			AND t.time BETWEEN unix_timestamp(#{start_time}) AND
			unix_timestamp(#{end_time})
		</if>
		ORDER BY t.time DESC
		LIMIT 1
	</select>
	
	<!-- SR流量图 -->
	<select id="drawThroughputNew" resultType="map">
		SELECT
			TRUNCATE (t.in_bytes / t.timespan, 0) AS in_bytes,
			TRUNCATE (t.out_bytes / t.timespan, 0) AS out_bytes,
			CONCAT(t.src_sr_id,t.if_name) ipIf
		FROM
			network_monitor.node_throughput_statistics_temp t
		WHERE
			CONCAT(t.src_sr_id,t.if_name) in (${ipIfList})
		ORDER BY
			t.time DESC
		LIMIT #{count}
	</select>

	<select id="srIp" resultType="map">
		select distinct(
		CONVERT (
		CONCAT(inet_ntoa(i.ifip), ''),
		CHAR
		)
		) AS srip
		from sr_node_info s
		left join sr_node_interface i on s.sr_id=i.sr_id
		<if test="sr_id!=null">
			where s.sr_id=#{sr_id}
			and CONVERT
			(CONCAT(inet_ntoa(i.ifip), ''),CHAR) not like '%10.%'
		</if>
	</select>


	<select id="dstIp" resultType="map">
		select distinct(
		CONVERT (
		CONCAT(inet_ntoa(i.ifip), ''),
		CHAR
		)
		) AS
		dst_ip
		from sr_node_info s
		left join sr_node_interface i on
		s.sr_id=i.sr_id
		<if test="dst_id!=null">
			where s.sr_id =#{dst_id}
			and CONVERT
			(CONCAT(inet_ntoa(i.ifip), ''),CHAR) not like '%10.%'
		</if>
	</select>

	<!-- 获取路由集合 -->
	<select id="listRoute" resultType="map">
		select distinct(inet_ntoa(r.next_hop))
		next_hop, r.sr_id,#{dst_ip} dst_ip,metric
		from route r
		WHERE r.sr_id=#{sr_id}
		and substring_index(inet_ntoa(r.dest),".",3)
		=substring_index(#{dst_ip},".",3)
<!-- 		 in ( -->
<!-- 		select substring_index(inet_ntoa(ifip),".",3) from sr_node_interface where -->
<!-- 		sr_id =#{dst_sr_id} -->
<!-- 		) -->

	</select>
	<!-- 获取下一跳的接口ip -->
	<select id="listNextIp" resultType="map">
		
        select distinct(i.sr_id),inet_ntoa(r.next_hop)next_hop,inet_ntoa(ifip) ifip,sr.sr_name,metric from route
		r,sr_node_interface i,sr_node_info sr where r.sr_id=i.sr_id  and sr.sr_id=i.sr_id
        and inet_ntoa(ifip)=#{next_hop} and  substring_index(inet_ntoa(r.dest),".",3)
		=substring_index(#{dst_ip},".",3)
	</select>
</mapper> 